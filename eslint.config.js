import js from "@eslint/js";
import svelte from "eslint-plugin-svelte";
import prettier from "eslint-config-prettier";

export default [
  js.configs.recommended,
  ...svelte.configs["flat/recommended"],
  prettier,
  {
    ignores: [
      ".svelte-kit/**",
      "build/**",
      "dist/**",
      "node_modules/**",
      ".vercel/**",
    ],
  },
  {
    files: ["**/*.{js,svelte}"],
    languageOptions: {
      ecmaVersion: 2022,
      sourceType: "module",
      globals: {
        console: "readonly",
        process: "readonly",
        Buffer: "readonly",
        __dirname: "readonly",
        __filename: "readonly",
        global: "readonly",
        fetch: "readonly",
        Headers: "readonly",
        Request: "readonly",
        Response: "readonly",
        URL: "readonly",
        URLSearchParams: "readonly",
        FormData: "readonly",
        File: "readonly",
        Blob: "readonly",
        AbortController: "readonly",
        AbortSignal: "readonly",
        ReadableStream: "readonly",
        WritableStream: "readonly",
        TransformStream: "readonly",
        TextEncoder: "readonly",
        TextDecoder: "readonly",
        crypto: "readonly",
        btoa: "readonly",
        atob: "readonly",
        setTimeout: "readonly",
        clearTimeout: "readonly",
        setInterval: "readonly",
        clearInterval: "readonly",
        setImmediate: "readonly",
        clearImmediate: "readonly",
        queueMicrotask: "readonly",
        performance: "readonly",
        structuredClone: "readonly",
        navigator: "readonly",
        location: "readonly",
        history: "readonly",
        localStorage: "readonly",
        sessionStorage: "readonly",
        indexedDB: "readonly",
        WebSocket: "readonly",
        EventSource: "readonly",
        Worker: "readonly",
        SharedWorker: "readonly",
        ServiceWorker: "readonly",
        BroadcastChannel: "readonly",
        MessageChannel: "readonly",
        MessagePort: "readonly",
        postMessage: "readonly",
        onmessage: "readonly",
        onerror: "readonly",
        onunhandledrejection: "readonly",
        onrejectionhandled: "readonly",
        onunload: "readonly",
        onbeforeunload: "readonly",
        onload: "readonly",
        onresize: "readonly",
        onscroll: "readonly",
        onfocus: "readonly",
        onblur: "readonly",
        onhashchange: "readonly",
        onpopstate: "readonly",
        onstorage: "readonly",
        ononline: "readonly",
        onoffline: "readonly",
        onpagehide: "readonly",
        onpageshow: "readonly",
        onbeforeprint: "readonly",
        onafterprint: "readonly",
        oncontextmenu: "readonly",
        onselectstart: "readonly",
        onselect: "readonly",
        oncopy: "readonly",
        oncut: "readonly",
        onpaste: "readonly",
        onkeydown: "readonly",
        onkeyup: "readonly",
        onkeypress: "readonly",
        onmouseover: "readonly",
        onmouseout: "readonly",
        onmousemove: "readonly",
        onmousedown: "readonly",
        onmouseup: "readonly",
        onclick: "readonly",
        ondblclick: "readonly",
        onwheel: "readonly",
        onmouseenter: "readonly",
        onmouseleave: "readonly",
        onpointerover: "readonly",
        onpointerout: "readonly",
        onpointermove: "readonly",
        onpointerdown: "readonly",
        onpointerup: "readonly",
        onpointercancel: "readonly",
        onpointerenter: "readonly",
        onpointerleave: "readonly",
        ongotpointercapture: "readonly",
        onlostpointercapture: "readonly",
        ontouchstart: "readonly",
        ontouchend: "readonly",
        ontouchmove: "readonly",
        ontouchcancel: "readonly",
        ontransitionstart: "readonly",
        ontransitionrun: "readonly",
        ontransitionend: "readonly",
        ontransitioncancel: "readonly",
        onanimationstart: "readonly",
        onanimationiteration: "readonly",
        onanimationend: "readonly",
        onanimationcancel: "readonly",
      },
    },
    rules: {
      "no-unused-vars": "warn",
      "no-console": "off",
      "svelte/valid-compile": "off",
      "svelte/no-at-html-tags": "warn",
      "svelte/a11y_click_events_have_key_events": "warn",
      "svelte/a11y_no_static_element_interactions": "warn",
      "svelte/a11y_no_noninteractive_element_interactions": "warn",
      "svelte/element_invalid_self_closing_tag": "warn",
      "svelte/attribute_quoted": "warn",
      "svelte/a11y_autofocus": "warn",
      "svelte/non_reactive_update": "warn"
    },
  },
  {
    files: ["**/*.svelte"],
    languageOptions: {
      parserOptions: {
        parser: "espree",
      },
    },
  },
];
